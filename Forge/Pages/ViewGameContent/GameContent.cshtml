@page
@model GameContentModel
@{
    ViewData["Title"] = "Game";
}

<img class="contentGameBackground" src="@Model.GameBackgroundImage" alt="BackgroundImage" />

<section class="gameContent">
    <div class="gameContentImage">
        <img class="contentGameCover" src="@Model.GameCoverImage" alt="CoverImage"/>
    </div>
    <div class="gameContentText">
        <p class="contentGameTitle">@Model.GameTitle</p>
        <p class="contentGameDescription">@Model.GameDescription</p>
        
        <div id="buttonContainer"></div>
@*             @if (validateExistence())
            {
                //If the item is already in the cart, display the "In Cart" button
                <button class="contentGameButton" id="inCart">In Cart</button>
            }
            else
            {
                //If the item is not in the cart, display the "Add to cart" button
                <button onclick="AddToCartJS()" class="contentGameButton" id="sendGameToCart">$@Model.GamePrice</button>

                //Initially hide the "In Cart" button, it will be shown when the game has been added to the cart
                <button class="contentGameButton" id="gameInCart" style="display: none;">In Cart</button>
            } *@
            
    </div>
</section>

<!--JavaScript section for handling the "Add to cart" functionality-->
<script>
    function AddToCartJS(){

        localStorage.setItem("@Model.GameID", "@Model.GameID");
        const itemInCart = document.getElementById("gameInCart");
        const cartItem = document.getElementById("sendGameToCart");

        //Hide the "Add to cart" button and show the "In Cart" button
        cartItem.style.display = "none";
        itemInCart.style.display = "block";
    }

    // Define the validateExistence() function
    function validateExistence() {
        let value = localStorage.getItem("@Model.GameID", "@Model.GameID");
        console.log(value);
        console.log("@Model.GameID");
        if (value !== null && value !== undefined) {
            return true;
        } else {
            return false;
        }
    }

    (function loadButton() {
        if (validateExistence()) {
            // If the item is already in the cart, create the "In Cart" button
            console.log("Exist");
            createInCartButton();
        } else {
            console.log("Does not");
            // If the item is not in the cart, create the "Add to Cart" button
            createAddToCartButton();
        }
    })();

    // Function to create the "Add to Cart" button
    function createAddToCartButton() {
        var buttonContainer = document.getElementById("buttonContainer");
        var button = document.createElement("button");
        button.setAttribute("class", "contentGameButton");
        button.setAttribute("id", "sendGameToCart");
        button.textContent = "$@Model.GamePrice";
        button.onclick = AddToCartJS;
        buttonContainer.appendChild(button);

        // Create the "In Cart" button (initially hidden)
        var inCartButton = document.createElement("button");
        inCartButton.setAttribute("class", "contentGameButton");
        inCartButton.setAttribute("id", "gameInCart");
        inCartButton.textContent = "In Cart";
        inCartButton.style.display = "none";
        buttonContainer.appendChild(inCartButton);
    }

    // Function to create the "In Cart" button
    function createInCartButton() {
        var buttonContainer = document.getElementById("buttonContainer");
        var button = document.createElement("button");
        button.setAttribute("class", "contentGameButton");
        button.setAttribute("id", "inCart");
        button.textContent = "In Cart";
        buttonContainer.appendChild(button);
    }
</script>

</script>

<section class="videoSection">
    <div class="videoClip">
        <video autoplay muted loop><source src="@Model.GameVideoClip" type="video/mp4"</video>
    </div>

    <div class="videoText">
        <p>Play Game</p>  
    </div>
</section>

<div class="systemRequirement">
    <div class="minimumSystemRequirement">
        <button class="systemRequirementButton">Minimum System Requirements</button>
        <div class="panel">
            <p class="requirementHeading">Operating System</p>
            <p class="requirementContent">@Model.systemRequirement.MinimumOS</p>

            <p class="requirementHeading">Processor</p>
            <p class="requirementContent">@Model.systemRequirement.MinimumProcessor</p>

            <p class="requirementHeading">Memory</p>
            <p class="requirementContent">@Model.systemRequirement.MinimumMemory</p>

            <p class="requirementHeading">Storage</p>
            <p class="requirementContent">@Model.systemRequirement.MinimumStorage</p>

            <p class="requirementHeading">Graphics</p>
            <p class="requirementContent">@Model.systemRequirement.MinimumGraphics</p>

            <p class="requirementHeading">Additional Notes</p>
            <p class="requirementContent">@Model.systemRequirement.AdditionalNotes</p>
        </div>
    </div>

    <div class="recommendedSystemRequirement">
        <button class="systemRequirementButton">Recommended System Requirements</button>
        <div class="panel">
            <p class="requirementHeading">Operating System</p>
            <p class="requirementContent">@Model.systemRequirement.RecommendedOS</p>

            <p class="requirementHeading">Processor</p>
            <p class="requirementContent">@Model.systemRequirement.RecommendedProcessor</p>

            <p class="requirementHeading">Memory</p>
            <p class="requirementContent">@Model.systemRequirement.RecommendedMemory</p>

            <p class="requirementHeading">Storage</p>
            <p class="requirementContent">@Model.systemRequirement.RecommendedStorage</p>

            <p class="requirementHeading">Graphics</p>
            <p class="requirementContent">@Model.systemRequirement.RecommendedGraphics</p>

            <p class="requirementHeading">Additional Notes</p>
            <p class="requirementContent">@Model.systemRequirement.AdditionalNotes</p>
        </div>
    </div>
</div>

<script>
    window.onload = function () {
        systemRequirement();
    };
</script>
