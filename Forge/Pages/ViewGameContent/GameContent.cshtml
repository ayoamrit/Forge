@page
@model GameContentModel
@{
    ViewData["Title"] = "Game";
}

<img class="contentGameBackground" src="@Model.GameBackgroundImage" alt="BackgroundImage" />

<section class="gameContent">
    <div class="gameContentImage">
        <img class="contentGameCover" src="@Model.GameCoverImage" alt="CoverImage"/>
    </div>
    <div class="gameContentText">
        <p class="contentGameTitle">@Model.GameTitle</p>
        <p class="contentGameDescription">@Model.GameDescription</p>

            @if (Model.cartHandler.Exist(Model.GameID))
            {
                //If the item is already in the cart, display the "In Cart" button
                <button class="contentGameButton" id="inCart">In Cart</button>
            }
            else
            {
                //If the item is not in the cart, display the "Add to cart" button
                <button onclick="AddToCartJS()" class="contentGameButton" id="cartItem">$@Model.GamePrice</button>

                //Initially hide the "In Cart" button, it will be shown when the game has been added to the cart
                <button class="contentGameButton" id="inCart" style="display: none;">In Cart</button>
            }
            
    </div>
</section>

<!--JavaScript section for handling the "Add to cart" functionality-->
<script>
    function AddToCartJS(){
        //Call the server-side function to add the item to the cart and get the result
       let flag = '@Model.AddToCart()';
        
       //Check whether the item has been added to the cart or not 
        if (flag) {

            //Get the references to the "In Cart" and "Add To Cart" button
            const itemInCart = document.getElementById("inCart");
            const cartItem = document.getElementById("cartItem");

            //Hide the "Add to cart" button and show the "In Cart" button
            cartItem.style.display = "none";
            itemInCart.style.display = "block";
        }
        else{
            throw "An error occurred: selected item has not been added to the cart";
        }
    }
</script>

@{
    //Generate a random number between 0 and 5
    int randomNumber = Model.random.Next(0, 5);
}

<section class="videoSection">
    <div class="videoClip">
        <video autoplay muted loop><source src="@Model.GameVideoClip" type="video/mp4"</video>
    </div>

    <div class="videoText">
        <p>Play Game</p>  
    </div>
</section>

<div class="systemRequirement">
    <div class="minimumSystemRequirement">
        <button class="systemRequirementButton">Minimum System Requirements</button>
        <div class="panel">
            <p class="requirementHeading">Operating System</p>
            <p class="requirementContent">@Model.systemRequirement.MinimumOS</p>

            <p class="requirementHeading">Processor</p>
            <p class="requirementContent">@Model.systemRequirement.MinimumProcessor</p>

            <p class="requirementHeading">Memory</p>
            <p class="requirementContent">@Model.systemRequirement.MinimumMemory</p>

            <p class="requirementHeading">Storage</p>
            <p class="requirementContent">@Model.systemRequirement.MinimumStorage</p>

            <p class="requirementHeading">Graphics</p>
            <p class="requirementContent">@Model.systemRequirement.MinimumGraphics</p>

            <p class="requirementHeading">Additional Notes</p>
            <p class="requirementContent">@Model.systemRequirement.AdditionalNotes</p>
        </div>
    </div>

    <div class="recommendedSystemRequirement">
        <button class="systemRequirementButton">Recommended System Requirements</button>
        <div class="panel">
            <p class="requirementHeading">Operating System</p>
            <p class="requirementContent">@Model.systemRequirement.RecommendedOS</p>

            <p class="requirementHeading">Processor</p>
            <p class="requirementContent">@Model.systemRequirement.RecommendedProcessor</p>

            <p class="requirementHeading">Memory</p>
            <p class="requirementContent">@Model.systemRequirement.RecommendedMemory</p>

            <p class="requirementHeading">Storage</p>
            <p class="requirementContent">@Model.systemRequirement.RecommendedStorage</p>

            <p class="requirementHeading">Graphics</p>
            <p class="requirementContent">@Model.systemRequirement.RecommendedGraphics</p>

            <p class="requirementHeading">Additional Notes</p>
            <p class="requirementContent">@Model.systemRequirement.AdditionalNotes</p>
        </div>
    </div>
</div>

<script>
    window.onload = function () {
        systemRequirement();
    };
</script>
